{"version":3,"sources":["webpack://easy_opc_client/./src/main.ts","webpack://easy_opc_client/external \"electron\"","webpack://easy_opc_client/external \"path\"","webpack://easy_opc_client/external \"url\"","webpack://easy_opc_client/webpack/bootstrap","webpack://easy_opc_client/webpack/runtime/compat get default export","webpack://easy_opc_client/webpack/runtime/define property getters","webpack://easy_opc_client/webpack/runtime/hasOwnProperty shorthand","webpack://easy_opc_client/webpack/runtime/make namespace object","webpack://easy_opc_client/webpack/startup"],"names":["url","require","path","window","tray","createWindow","BrowserWindow","minWidth","minHeight","width","height","frame","webPreferences","nodeIntegration","enableRemoteModule","loadURL","format","pathname","join","__dirname","protocol","slashes","on","app","process","platform","Tray","popUpContextMenu","show","menu","Menu","label","click","setToolTip","setContextMenu"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAMA,GAAG,GAAGC,mBAAO,CAAC,gBAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,mBAAO,CAAC,kBAAD,CAApB;;AAEA;AAEA,IAAIE,MAAJ;AACA,IAAIC,IAAI,GAAG,IAAX;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBF,QAAM,GAAG,IAAIG,mDAAJ,CAAkB;AACzBC,YAAQ,EAAE,IADe;AACTC,aAAS,EAAE,GADF;AACOC,SAAK,EAAE,IADd;AACoBC,UAAM,EAAE,GAD5B;AACiCC,SAAK,EAAE,KADxC;AAC+CC,kBAAc,EAAE;AACtFC,qBAAe,EAAE,IADqE;AAEtFC,wBAAkB,EAAE;AAFkE;AAD/D,GAAlB,CAAT;AAOAX,QAAM,CAACY,OAAP,CACEf,GAAG,CAACgB,MAAJ,CAAW;AACTC,YAAQ,EAAEf,IAAI,CAACgB,IAAL,CAAUC,SAAV,EAAqB,YAArB,CADD;AAETC,YAAQ,EAAE,OAFD;AAGTC,WAAO,EAAE;AAHA,GAAX,CADF;AAQAlB,QAAM,CAACmB,EAAP,CAAU,QAAV,EAAoB,YAAM;AACxBnB,UAAM,GAAG,IAAT;AACD,GAFD;AAGD,CAnBD;;AAqBAoB,4CAAA,CAAO,OAAP,EAAgBlB,YAAhB;AAEAkB,4CAAA,CAAO,mBAAP,EAA4B,YAAM;AAChC,MAAIC,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmC;AACjCF,kDAAA;AACD;AACF,CAJD;AAMAA,4CAAA,CAAO,UAAP,EAAmB,YAAM;AACvB,MAAIpB,MAAM,KAAK,IAAf,EAAqB;AACnBE,gBAAY;AACb;AACF,CAJD;AAMAkB,4CAAA,CAAO,OAAP,EAAgB,YAAM;AACpBnB,MAAI,GAAG,IAAIsB,0CAAJ,CAASxB,IAAI,CAACgB,IAAL,CAAUC,SAAV,EAAqB,+BAArB,CAAT,CAAP;;AAEA,MAAIK,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;AAChCrB,QAAI,CAACkB,EAAL,CAAQ,eAAR,EAAyBlB,IAAI,CAACuB,gBAA9B;AACAvB,QAAI,CAACkB,EAAL,CAAQ,cAAR,EAAwB;AAAA,aAAMnB,MAAM,CAACyB,IAAP,EAAN;AAAA,KAAxB;AACD;;AAED,MAAMC,IAAI,GAAGC,4DAAA,CAAuB,CAClC;AACEC,SAAK,EAAE,MADT;AAEEC,SAFF,mBAEU;AAAET,oDAAA;AAAa;AAFzB,GADkC,CAAvB,CAAb;AAOAnB,MAAI,CAAC6B,UAAL,CAAgB,cAAhB;AACA7B,MAAI,CAAC8B,cAAL,CAAoBL,IAApB;AACD,CAjBD,E;;;;;;;;;;;;;;AC3CA,sC;;;;;;;;;;;;;ACAA,kC;;;;;;;;;;;;;ACAA,iC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["const url = require(\"url\");\r\nconst path = require(\"path\");\r\n\r\nimport { app, BrowserWindow, Menu, Tray } from \"electron\";\r\n\r\nlet window: BrowserWindow | null;\r\nlet tray = null;\r\n\r\nconst createWindow = () => {\r\n  window = new BrowserWindow({\r\n    minWidth: 1100, minHeight: 700, width: 1100, height: 700, frame: false, webPreferences: {\r\n      nodeIntegration: true,\r\n      enableRemoteModule: true\r\n    }\r\n  });\r\n\r\n  window.loadURL(\r\n    url.format({\r\n      pathname: path.join(__dirname, \"index.html\"),\r\n      protocol: \"file:\",\r\n      slashes: true\r\n    })\r\n  );\r\n\r\n  window.on(\"closed\", () => {\r\n    window = null;\r\n  });\r\n};\r\n\r\napp.on(\"ready\", createWindow);\r\n\r\napp.on(\"window-all-closed\", () => {\r\n  if (process.platform !== \"darwin\") {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on(\"activate\", () => {\r\n  if (window === null) {\r\n    createWindow();\r\n  }\r\n});\r\n\r\napp.on('ready', () => {\r\n  tray = new Tray(path.join(__dirname, 'resources/icons/tray-icon.png'));\r\n\r\n  if (process.platform === 'win32') {\r\n    tray.on('balloon-click', tray.popUpContextMenu);\r\n    tray.on('double-click', () => window.show());\r\n  }\r\n\r\n  const menu = Menu.buildFromTemplate([\r\n    {\r\n      label: 'Exit',\r\n      click() { app.quit(); }\r\n    }\r\n  ]);\r\n\r\n  tray.setToolTip('EasyOPC Demo');\r\n  tray.setContextMenu(menu);\r\n});","module.exports = require(\"electron\");;","module.exports = require(\"path\");;","module.exports = require(\"url\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/main.ts\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}